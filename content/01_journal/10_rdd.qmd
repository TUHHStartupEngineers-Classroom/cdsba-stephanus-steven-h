---
title: "Regression Discontinuity"
format:
  html:
    self-contained: true
author: "Stephanus Steven Halimkesuma"
toc: true
execute:
  warning: false
---


```{r}
#| output: asis
# Install and load required packages

library(tidyverse)
library(rddtools)
library(rddensity)
library(ggthemes)
library(scales)
library(ggplot2)
library(tidyverse)



# Load all data
coupon_data <- readRDS('E:/Master Study/TUHH/Wise 23-24/Causal Data Science for Business Analytics/Causal_Data_Science_Data/coupon.rds')
head(coupon_data)

shipping_data <- readRDS('E:/Master Study/TUHH/Wise 23-24/Causal Data Science for Business Analytics/Causal_Data_Science_Data/shipping.rds')
head(shipping_data)

# Define cut-off
c0 <- 60

# Density test
rddd <- rddensity(coupon_data$days_since_last, c = c0)
summary(rddd)

# Visually check continuity at running variable
rdd_plot <- rdplotdensity(rddd, coupon_data$days_since_last, plotN = 100)

# Specify bandwidth
bw <- c0 + c(-30, 60)

# Subsets below and above threshold in specified bandwidth
df_bw_below <- coupon_data %>% filter(days_since_last >= bw[1] & days_since_last < c0)
df_bw_above <- coupon_data %>% filter(days_since_last >= c0 & days_since_last <= bw[2])

# Alternative way to define tables
# df_bw_below <- df %>% filter(days_since_last >= bw[1], days_since_last  < c0)
# df_bw_above <- df %>% filter(days_since_last >= c0, days_since_last <= bw[2])

df_bw <- bind_rows(df_bw_above, df_bw_below)
dim(df_bw)


# Plot dependent variable vs running variable
dep_var <-
  ggplot(coupon_data, aes(x = days_since_last, y = purchase_after, color = coupon)) +
  geom_vline(xintercept = c0, color = "green") +
  geom_point(alpha = 0.1, size = 0.2) +
  # add lines for the full range
  geom_smooth(data = filter(coupon_data, days_since_last <= c0), 
              method = "lm", se = F, linewidth = 1, linetype = "dashed") +
  geom_smooth(data = filter(coupon_data, days_since_last > c0), 
              method = "lm", se = F, linewidth = 1, linetype = "dashed") +
  # add lines for specified bandwidth
  geom_smooth(data = df_bw_below, method = "lm", se = F, 
              color = "green", linewidth = 2) +
  geom_smooth(data = df_bw_above, method = "lm", se = F, 
              color = "green", linewidth = 2) +
  scale_color_discrete(labels = c("No coupon", "Coupon")) +
  xlab("Days since last purchase") +
  ylab("Purchase after coupon assignment") +
  theme(legend.title = element_blank())
dep_var

# [3.2] Local Average treatment effect (LATE) ----
# Extract values for vertical lines to visualize local average treatment effect
model_bw_below <- lm(purchase_after ~ days_since_last, df_bw_below)
model_bw_above <- lm(purchase_after ~ days_since_last, df_bw_above)

y0 <- predict(model_bw_below, tibble(days_since_last = c0))
y1 <- predict(model_bw_above, tibble(days_since_last = c0))

late <- y1 - y0
sprintf("LATE: %.2f", late)

# Minimum and maximum for y-axis limits
min_y <- min(df_bw$purchase_after)
max_y <- max(df_bw$purchase_after)

# Add lines for vertical distance and change limits of x-axis.
dep_var_bw <- 
  ggplot(df_bw, aes(x = days_since_last, y = purchase_after, color = coupon)) +
  geom_vline(xintercept = c0, color = "white", linewidth = 2) +
  geom_point(alpha = 0.4, size = 1) +
  geom_smooth(data = df_bw_below, method = "lm", se = F, linewidth = 2) +
  geom_smooth(data = df_bw_above, method = "lm", se = F, linewidth = 2) +
  geom_segment(aes(x = c0, xend = bw[2], y = y0, yend = y0),
               linetype = "dotted", color = "white") +
  geom_segment(aes(x = bw[1], xend = c0, y = y1, yend = y1),
               linetype = "dotted", color = "white"[4]) +
  annotate("text", x = c0+2, y = mean(c(y1, y0)-2),
           label = sprintf("Difference: %.2f", (y1 - y0)),
           color = "white", fontface = 2) +
  scale_y_continuous(limits = c(min_y, max_y)) + 
  scale_color_discrete(labels = c("No coupon", "Coupon")) +
  xlab("Days since last purchase") +
  ylab("Purchase after coupon assignment") +
  theme(legend.title = element_blank())
dep_var_bw

lm_bw <- lm(purchase_after ~ days_since_last_centered + coupon, df_bw)
summary(lm_bw)

# Using 30 EUR as a cutoff of running variable
summary(shipping_data$purchase_amount)

# Plot the distribution of purchase_amount
ggplot(shipping_data, aes(x = purchase_amount)) +
  geom_histogram(binwidth = 5, fill = "blue", color = "black") +
  labs(title = "Distribution of Purchase Amount", x = "Purchase Amount (â‚¬)", y = "Frequency")


:::